services:
  redis-server:
    image: redis
    container_name: redis-server
    ports:
      - "${HOST_REDIS_PORT:-6379}:6379" # Map to host port defined in .env, default to 6379
    restart: always
    networks:
      - app-network

  mongodb:
    image: mongo # Specify a version for stability
    container_name: mongo-server
    ports:
      - "${HOST_MONGO_PORT:-27017}:27017" # Map to host port defined in .env, default to 27017
    environment:
      # Root user for MongoDB instance initialization (used by mongo-init.js)
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}

      # Database to be created (and user granted access to)
      MONGO_INITDB_DATABASE: ${APP_MONGO_DATABASE_INIT:-titandb}

      # Application-specific user credentials to be created by mongo-init.js
      MONGO_APP_USERNAME: ${APP_MONGO_USERNAME_INIT:-appuser}
      MONGO_APP_PASSWORD: ${APP_MONGO_PASSWORD_INIT:-apppassword}
    volumes:
      - mongodata:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodata: {}
